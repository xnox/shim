#!/usr/bin/make -f

include /usr/share/dpkg/default.mk

# Other vendors, add your certs here.  No sense in using
# dpkg-vendor --derives-from, because only Canonical-generated binaries will
# be signed with this key; so if you are building your own shim binary you
# should be building the other binaries also.
ifeq ($(shell dpkg-vendor --is ubuntu && echo yes),yes)
	cert=debian/canonical-uefi-ca.der
	dbx=debian/canonical-2021_$(DEB_HOST_ARCH).esl
	distributor=ubuntu
else
	cert=debian/debian-uefi-ca.der
	distributor=debian
endif

ifeq ($(DEB_HOST_ARCH),amd64)
export EFI_ARCH := x64
endif
ifeq ($(DEB_HOST_ARCH),arm64)
export EFI_ARCH := aa64
endif

COMMON_OPTIONS = \
	RELEASE=15 \
	COMMIT_ID=f9294c2fa9feaf5353c0b7a4a7ce102a820c1a3f \
	MAKELEVEL=0 \
	ENABLE_SHIM_CERT=1 \
	ENABLE_SBSIGN=1 \
	VENDOR_CERT_FILE=$(cert) \
	VENDOR_DBX_FILE=$(dbx) \
	EFIDIR=$(distributor) \
	DISABLE_EBS_PROTECTION=1 \
	$(NULL)

%:
	dh $@ --with buildinfo

override_dh_auto_clean:
	dh_auto_clean -- MAKELEVEL=0
	rm -f data/sbat.$(distributor).csv sbat.$(distributor).csv

SHIM:=$(notdir $(wildcard /usr/lib/shim/shim*.efi))
MM:=$(notdir $(wildcard /usr/lib/shim/mm*.efi))
FB:=$(notdir $(wildcard /usr/lib/shim/fb*.efi))
override_dh_auto_build:
	sed -e "s/@DEB_VERSION@/$(DEB_VERSION)/g" \
		<debian/sbat.$(distributor).csv.in \
		>data/sbat.$(distributor).csv
ifneq (,$(filter pkg.shim.reproducible,$(DEB_BUILD_PROFILES)))
	sbattach --detach $(MM).sig /usr/lib/shim/$(MM)
	sbattach --detach $(FB).sig /usr/lib/shim/$(FB)
	openssl pkcs7 -inform der -in $(MM).sig -print_certs -outform pem -out shim.crt
	# For makefile dependencies
	sed 's/^.PHONY : install-deps shim.key$$/.PHONY : install-deps/' -i Makefile
	touch shim.key
	dh_auto_build -- $(COMMON_OPTIONS) $(SHIM).debug $(MM).debug $(FB).debug $(SHIM) $(MM) $(FB)
	cp $(MM) $(MM).signed
	cp $(FB) $(FB).signed
	sbattach --attach $(MM).sig $(MM).signed
	sbattach --attach $(FB).sig $(FB).signed
	rm -f $(MM).sig $(FB).sig
	# Compare SHIM
	cmp /usr/lib/shim/$(SHIM) $(SHIM)
	# Verify MM & FB
	sbverify --cert shim.crt $(MM).signed
	sbverify --cert shim.crt $(FB).signed
endif
	dh_auto_build -- $(COMMON_OPTIONS)

override_dh_auto_install:
	dh_auto_install --destdir=debian/tmp -- $(COMMON_OPTIONS)
	rm -rf debian/tmp/usr/src
	rm -rf debian/tmp/boot/efi/EFI/BOOT/BOOT*.EFI

override_dh_auto_test:
	# fails to build
	-dh_auto_test

override_dh_strip:
override_dh_dwz:
override_dh_shlibdeps:
	dh_shlibdeps -X.efi

override_dh_fixperms:
	dh_fixperms
	chmod a-x debian/shim/usr/lib/shim/shim$(EFI_ARCH).efi

signing=debian/shim-$(DEB_VERSION)-signing/
signingv=$(signing)/$(DEB_VERSION)
signing_tar=$(DEB_SOURCE)_$(DEB_VERSION)_$(DEB_HOST_ARCH).tar.gz
override_dh_builddeb:
	dh_builddeb
	mkdir -p $(signingv)/control
	echo 'tarball' >$(signingv)/control/options
	cp debian/shim/usr/lib/shim/shim*.efi $(signingv)/
	tar -C $(signing) -czvf $(CURDIR)/../$(signing_tar) .
	dpkg-distaddfile $(signing_tar) raw-signing -

override_dh_clean:
	rm -rf debian/shim-*-signing/
	dh_clean

generate-gnu-efi:
	git -C gnu-efi archive --prefix=gnu-efi/ HEAD | xz -9 > ../shim_$(DEB_VERSION_UPSTREAM).orig-gnu-efi.tar.xz
