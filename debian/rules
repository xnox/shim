#!/usr/bin/make -f

include /usr/share/dpkg/default.mk

# Other vendors, add your certs here.  No sense in using
# dpkg-vendor --derives-from, because only Canonical-generated binaries will
# be signed with this key; so if you are building your own shim binary you
# should be building the other binaries also.
ifeq ($(shell dpkg-vendor --is ubuntu && echo yes),yes)
	cert=debian/canonical-uefi-ca.der
	distributor=ubuntu
else
	cert=debian/debian-uefi-ca.der
	distributor=debian
endif

ifeq ($(DEB_HOST_ARCH),amd64)
export EFI_ARCH := x64
endif
ifeq ($(DEB_HOST_ARCH),arm64)
export EFI_ARCH := aa64
endif

COMMON_OPTIONS = \
	RELEASE=15 \
	COMMIT_ID=a4a1fbe728c9545fc5647129df0cf1593b953bec \
	MAKELEVEL=0 \
	EFI_PATH=/usr/lib \
	ENABLE_HTTPBOOT=true \
	ENABLE_SHIM_CERT=1 \
	ENABLE_SBSIGN=1 \
	VENDOR_CERT_FILE=$(cert) \
	EFIDIR=$(distributor) \
	$(NULL)

%:
	dh $@ --parallel

override_dh_auto_clean:
	dh_auto_clean -- MAKELEVEL=0

override_dh_auto_build:
	dh_auto_build -- $(COMMON_OPTIONS)

override_dh_auto_install:
	dh_auto_install --destdir=debian/tmp -- $(COMMON_OPTIONS)

override_dh_fixperms:
	dh_fixperms
	chmod a-x debian/shim/usr/lib/shim/shim$(EFI_ARCH).efi

signing=debian/shim-$(DEB_VERSION)-signing/
signingv=$(signing)/$(DEB_VERSION)
signing_tar=$(DEB_SOURCE)_$(DEB_VERSION)_$(DEB_HOST_ARCH).tar.gz
override_dh_builddeb:
	dh_builddeb
	mkdir -p $(signingv)/control
	echo 'tarball' >$(signingv)/control/options
	cp debian/shim/usr/lib/shim/shim*.efi $(signingv)/
	tar -C $(signing) -czvf $(CURDIR)/../$(signing_tar) .
	dpkg-distaddfile $(signing_tar) raw-signing -
